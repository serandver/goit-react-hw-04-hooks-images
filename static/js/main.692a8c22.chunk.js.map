{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageLoader/ImageLoader.js","components/LoadMoreButton/LoadMoreButton.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","imageName","setImageName","reset","className","type","onClick","event","preventDefault","trim","toast","error","autoComplete","name","onChange","value","currentTarget","autoFocus","placeholder","ImageGalleryItem","webformatURL","largeImageURL","onClickImage","src","alt","ImageLoader","color","height","width","timeout","LoadMoreButton","STATUS","ImageGallery","searchResult","setSearchResult","setError","status","setStatus","currentPage","setCurrentPage","isFirstRender","useRef","useEffect","current","fetchImages","url","fetch","then","response","ok","json","Promise","reject","Error","data","hits","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","message","map","id","length","Modal","largeImage","toogleModal","addEventListener","handleKeyDown","removeEventListener","e","code","target","App","showModal","setShowModal","setLargeImage","toggleModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.692a8c22.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [imageName, setImageName] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { value } = event.currentTarget;\r\n    setImageName(value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (imageName.trim() === '') {\r\n      toast.error('empty search field');\r\n      return;\r\n    }\r\n    onSubmit(imageName);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setImageName('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"SearchForm-button\"\r\n          onClick={handleSubmit}\r\n        >\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          name=\"imageName\"\r\n          onChange={handleChange}\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({\r\n  webformatURL,\r\n  largeImageURL,\r\n  onClickImage,\r\n  imageName,\r\n}) => {\r\n  return (\r\n    <li\r\n      className=\"ImageGalleryItem\"\r\n      onClick={() => onClickImage(largeImageURL)}\r\n    >\r\n      <img\r\n        src={webformatURL}\r\n        alt={imageName}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onClickImage: PropTypes.func,\r\n  imageName: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst ImageLoader = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n};\r\nexport default ImageLoader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoadMoreButton = ({ onClick }) => {\r\n  return (\r\n    <button type=\"submit\" className=\"Button\" onClick={onClick}>\r\n      <span>Load More</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nLoadMoreButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default LoadMoreButton;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport ImageLoader from '../ImageLoader/ImageLoader';\r\nimport LoadMoreButton from '../LoadMoreButton/LoadMoreButton';\r\n\r\nconst API_SECRET_KEY = '23900299-fa2ddfe6bd8026b5b95bcaf8f';\r\nconst baseURL = `https://pixabay.com/api/`;\r\nconst perPage = 12;\r\n\r\nconst STATUS = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function ImageGallery({ imageName, onClickImage }) {\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(STATUS.IDLE);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const isFirstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    setStatus(STATUS.PENDING);\r\n    setSearchResult([]);\r\n    setCurrentPage(1);\r\n    fetchImages();\r\n  }, [imageName]);\r\n\r\n  const fetchImages = () => {\r\n    const url = `${baseURL}?q=${imageName}&page=${currentPage}&key=${API_SECRET_KEY}&per_page=${perPage}`;\r\n\r\n    fetch(url)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return Promise.reject(new Error('Empty result'));\r\n      })\r\n      .then(data => {\r\n        const { hits } = data;\r\n        setSearchResult([...searchResult, ...hits]);\r\n        setCurrentPage(currentPage + 1);\r\n        setStatus(STATUS.RESOLVED);\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(STATUS.REJECTED);\r\n      });\r\n  };\r\n\r\n  if (status === STATUS.IDLE) {\r\n    return <div></div>;\r\n  }\r\n\r\n  if (status === STATUS.PENDING) {\r\n    return <ImageLoader />;\r\n  }\r\n\r\n  if (status === STATUS.REJECTED) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  if (status === STATUS.RESOLVED) {\r\n    return (\r\n      <>\r\n        <ul className=\"ImageGallery\">\r\n          {searchResult.map(({ id, webformatURL, largeImageURL }) => (\r\n            <ImageGalleryItem\r\n              key={id}\r\n              webformatURL={webformatURL}\r\n              onClickImage={onClickImage}\r\n              largeImageURL={largeImageURL}\r\n              imageName={imageName}\r\n            />\r\n          ))}\r\n          {searchResult.length > 0 ? (\r\n            <LoadMoreButton onClick={fetchImages} />\r\n          ) : (\r\n            <h1>По вашему запросу ничего не найдено.</h1>\r\n          )}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  imageName: PropTypes.string,\r\n  onClickImage: PropTypes.func,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Modal({ largeImage, imageName, toogleModal }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      toogleModal();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget != e.target) {\r\n      toogleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Modal</h1>\r\n      <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={largeImage} alt={imageName} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  toogleModal: PropTypes.func,\r\n  largeImage: PropTypes.string,\r\n  imageName: PropTypes.string,\r\n};\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const [showModal, setShowModal] = useState(false);\n  const [imageName, setImageName] = useState('');\n  const [largeImage, setLargeImage] = useState(null);\n\n  const search = imageName => {\n    setImageName(imageName);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleClickImage = largeImage => {\n    setLargeImage(largeImage);\n    toggleModal();\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={search} />\n      <ImageGallery imageName={imageName} onClickImage={handleClickImage} />\n      {showModal && (\n        <Modal\n          toogleModal={toggleModal}\n          largeImage={largeImage}\n          imageName={imageName}\n        />\n      )}\n      <ToastContainer />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}